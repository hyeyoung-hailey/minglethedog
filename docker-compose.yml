services:
  zookeeper:
    image: quay.io/debezium/zookeeper:3.0
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # ‚úÖ ÏûêÎèô ÌÜ†ÌîΩ ÏÉùÏÑ± ÌôúÏÑ±Ìôî
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: mydb
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  kafka-connect:
    image: custom-kafka-connect
    container_name: kafka-connect
    restart: always
    depends_on:
      - kafka
      - elasticsearch
    ports:
      - "8083:8083"
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECT_GROUP_ID=connect-cluster
      - CONNECT_CONFIG_STORAGE_TOPIC=connect-configs
      - CONNECT_OFFSET_STORAGE_TOPIC=connect-offsets
      - CONNECT_STATUS_STORAGE_TOPIC=connect-statuses
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect
      - CONNECT_PLUGIN_PATH=/usr/share/confluent-hub-components
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter  # üëà Ï∂îÍ∞Ä
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter  # üëà Ï∂îÍ∞Ä
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false  # üëà JSON ConverterÏùº Îïå ÌïÑÏöî
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false  # üëà JSON ConverterÏùº Îïå ÌïÑÏöî

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

volumes:
  mysql_data: